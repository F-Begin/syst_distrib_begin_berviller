
package begber.web.servlet.client.gestions;

import java.util.List;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ProjetGestionEtudiant", targetNamespace = "gestions")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ProjetGestionEtudiant {


    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkAvailabilityEtu", targetNamespace = "gestions", className = "gestions.CheckAvailabilityEtu")
    @ResponseWrapper(localName = "checkAvailabilityEtuResponse", targetNamespace = "gestions", className = "gestions.CheckAvailabilityEtuResponse")
    @Action(input = "gestions/ProjetGestionEtudiant/checkAvailabilityEtuRequest", output = "gestions/ProjetGestionEtudiant/checkAvailabilityEtuResponse")
    public boolean checkAvailabilityEtu(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkAvailabilityMatiere", targetNamespace = "gestions", className = "gestions.CheckAvailabilityMatiere")
    @ResponseWrapper(localName = "checkAvailabilityMatiereResponse", targetNamespace = "gestions", className = "gestions.CheckAvailabilityMatiereResponse")
    @Action(input = "gestions/ProjetGestionEtudiant/checkAvailabilityMatiereRequest", output = "gestions/ProjetGestionEtudiant/checkAvailabilityMatiereResponse")
    public boolean checkAvailabilityMatiere(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkAvailabilityUser", targetNamespace = "gestions", className = "gestions.CheckAvailabilityUser")
    @ResponseWrapper(localName = "checkAvailabilityUserResponse", targetNamespace = "gestions", className = "gestions.CheckAvailabilityUserResponse")
    @Action(input = "gestions/ProjetGestionEtudiant/checkAvailabilityUserRequest", output = "gestions/ProjetGestionEtudiant/checkAvailabilityUserResponse")
    public boolean checkAvailabilityUser(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @return
     *     returns java.util.List<gestions.User>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getListeUser", targetNamespace = "gestions", className = "gestions.GetListeUser")
    @ResponseWrapper(localName = "getListeUserResponse", targetNamespace = "gestions", className = "gestions.GetListeUserResponse")
    @Action(input = "gestions/ProjetGestionEtudiant/getListeUserRequest", output = "gestions/ProjetGestionEtudiant/getListeUserResponse")
    public List<User> getListeUser();

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "suprEtu", targetNamespace = "gestions", className = "gestions.SuprEtu")
    @ResponseWrapper(localName = "suprEtuResponse", targetNamespace = "gestions", className = "gestions.SuprEtuResponse")
    @Action(input = "gestions/ProjetGestionEtudiant/suprEtuRequest", output = "gestions/ProjetGestionEtudiant/suprEtuResponse")
    public void suprEtu(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns gestions.Etudiant
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getEtuByID", targetNamespace = "gestions", className = "gestions.GetEtuByID")
    @ResponseWrapper(localName = "getEtuByIDResponse", targetNamespace = "gestions", className = "gestions.GetEtuByIDResponse")
    @Action(input = "gestions/ProjetGestionEtudiant/getEtuByIDRequest", output = "gestions/ProjetGestionEtudiant/getEtuByIDResponse")
    public Etudiant getEtuByID(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "setListeEtu", targetNamespace = "gestions", className = "gestions.SetListeEtu")
    @ResponseWrapper(localName = "setListeEtuResponse", targetNamespace = "gestions", className = "gestions.SetListeEtuResponse")
    @Action(input = "gestions/ProjetGestionEtudiant/setListeEtuRequest", output = "gestions/ProjetGestionEtudiant/setListeEtuResponse")
    public void setListeEtu(
        @WebParam(name = "arg0", targetNamespace = "")
        List<Etudiant> arg0);

    /**
     * 
     * @param password
     * @param id
     * @param username
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "newUsers", targetNamespace = "gestions", className = "gestions.NewUsers")
    @ResponseWrapper(localName = "newUsersResponse", targetNamespace = "gestions", className = "gestions.NewUsersResponse")
    @Action(input = "gestions/ProjetGestionEtudiant/newUsersRequest", output = "gestions/ProjetGestionEtudiant/newUsersResponse")
    public boolean newUsers(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "suprUser", targetNamespace = "gestions", className = "gestions.SuprUser")
    @ResponseWrapper(localName = "suprUserResponse", targetNamespace = "gestions", className = "gestions.SuprUserResponse")
    @Action(input = "gestions/ProjetGestionEtudiant/suprUserRequest", output = "gestions/ProjetGestionEtudiant/suprUserResponse")
    public void suprUser(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "suprMatiere", targetNamespace = "gestions", className = "gestions.SuprMatiere")
    @ResponseWrapper(localName = "suprMatiereResponse", targetNamespace = "gestions", className = "gestions.SuprMatiereResponse")
    @Action(input = "gestions/ProjetGestionEtudiant/suprMatiereRequest", output = "gestions/ProjetGestionEtudiant/suprMatiereResponse")
    public void suprMatiere(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @return
     *     returns java.util.List<gestions.Note>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getListeNote", targetNamespace = "gestions", className = "gestions.GetListeNote")
    @ResponseWrapper(localName = "getListeNoteResponse", targetNamespace = "gestions", className = "gestions.GetListeNoteResponse")
    @Action(input = "gestions/ProjetGestionEtudiant/getListeNoteRequest", output = "gestions/ProjetGestionEtudiant/getListeNoteResponse")
    public List<Note> getListeNote();

    /**
     * 
     * @param nom
     * @param coeff
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "newMatiere", targetNamespace = "gestions", className = "gestions.NewMatiere")
    @ResponseWrapper(localName = "newMatiereResponse", targetNamespace = "gestions", className = "gestions.NewMatiereResponse")
    @Action(input = "gestions/ProjetGestionEtudiant/newMatiereRequest", output = "gestions/ProjetGestionEtudiant/newMatiereResponse")
    public boolean newMatiere(
        @WebParam(name = "nom", targetNamespace = "")
        String nom,
        @WebParam(name = "coeff", targetNamespace = "")
        int coeff);

    /**
     * 
     * @param password
     * @param username
     * @return
     *     returns boolean
     * @throws InvalidKeySpecException_Exception
     * @throws NoSuchAlgorithmException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "connexion", targetNamespace = "gestions", className = "gestions.Connexion")
    @ResponseWrapper(localName = "connexionResponse", targetNamespace = "gestions", className = "gestions.ConnexionResponse")
    @Action(input = "gestions/ProjetGestionEtudiant/connexionRequest", output = "gestions/ProjetGestionEtudiant/connexionResponse", fault = {
        @FaultAction(className = NoSuchAlgorithmException_Exception.class, value = "gestions/ProjetGestionEtudiant/connexion/Fault/NoSuchAlgorithmException"),
        @FaultAction(className = InvalidKeySpecException_Exception.class, value = "gestions/ProjetGestionEtudiant/connexion/Fault/InvalidKeySpecException")
    })
    public boolean connexion(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password)
        throws InvalidKeySpecException_Exception, NoSuchAlgorithmException_Exception
    ;

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "suprNote", targetNamespace = "gestions", className = "gestions.SuprNote")
    @ResponseWrapper(localName = "suprNoteResponse", targetNamespace = "gestions", className = "gestions.SuprNoteResponse")
    @Action(input = "gestions/ProjetGestionEtudiant/suprNoteRequest", output = "gestions/ProjetGestionEtudiant/suprNoteResponse")
    public void suprNote(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "setListeMatiere", targetNamespace = "gestions", className = "gestions.SetListeMatiere")
    @ResponseWrapper(localName = "setListeMatiereResponse", targetNamespace = "gestions", className = "gestions.SetListeMatiereResponse")
    @Action(input = "gestions/ProjetGestionEtudiant/setListeMatiereRequest", output = "gestions/ProjetGestionEtudiant/setListeMatiereResponse")
    public void setListeMatiere(
        @WebParam(name = "arg0", targetNamespace = "")
        List<Matiere> arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns gestions.Matiere
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMatiere", targetNamespace = "gestions", className = "gestions.GetMatiere")
    @ResponseWrapper(localName = "getMatiereResponse", targetNamespace = "gestions", className = "gestions.GetMatiereResponse")
    @Action(input = "gestions/ProjetGestionEtudiant/getMatiereRequest", output = "gestions/ProjetGestionEtudiant/getMatiereResponse")
    public Matiere getMatiere(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @return
     *     returns java.util.List<gestions.Etudiant>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getListeEtu", targetNamespace = "gestions", className = "gestions.GetListeEtu")
    @ResponseWrapper(localName = "getListeEtuResponse", targetNamespace = "gestions", className = "gestions.GetListeEtuResponse")
    @Action(input = "gestions/ProjetGestionEtudiant/getListeEtuRequest", output = "gestions/ProjetGestionEtudiant/getListeEtuResponse")
    public List<Etudiant> getListeEtu();

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "setListeNote", targetNamespace = "gestions", className = "gestions.SetListeNote")
    @ResponseWrapper(localName = "setListeNoteResponse", targetNamespace = "gestions", className = "gestions.SetListeNoteResponse")
    @Action(input = "gestions/ProjetGestionEtudiant/setListeNoteRequest", output = "gestions/ProjetGestionEtudiant/setListeNoteResponse")
    public void setListeNote(
        @WebParam(name = "arg0", targetNamespace = "")
        List<Note> arg0);

    /**
     * 
     * @return
     *     returns java.util.List<gestions.Matiere>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getListeMatiere", targetNamespace = "gestions", className = "gestions.GetListeMatiere")
    @ResponseWrapper(localName = "getListeMatiereResponse", targetNamespace = "gestions", className = "gestions.GetListeMatiereResponse")
    @Action(input = "gestions/ProjetGestionEtudiant/getListeMatiereRequest", output = "gestions/ProjetGestionEtudiant/getListeMatiereResponse")
    public List<Matiere> getListeMatiere();

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "setListeUser", targetNamespace = "gestions", className = "gestions.SetListeUser")
    @ResponseWrapper(localName = "setListeUserResponse", targetNamespace = "gestions", className = "gestions.SetListeUserResponse")
    @Action(input = "gestions/ProjetGestionEtudiant/setListeUserRequest", output = "gestions/ProjetGestionEtudiant/setListeUserResponse")
    public void setListeUser(
        @WebParam(name = "arg0", targetNamespace = "")
        List<User> arg0);

    /**
     * 
     * @param matieres
     * @param note
     * @param id
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "newNote", targetNamespace = "gestions", className = "gestions.NewNote")
    @Action(input = "gestions/ProjetGestionEtudiant/newNote")
    public void newNote(
        @WebParam(name = "id", targetNamespace = "")
        String id,
        @WebParam(name = "matieres", targetNamespace = "")
        String matieres,
        @WebParam(name = "note", targetNamespace = "")
        float note);

    /**
     * 
     * @param numEtu
     * @param nom
     * @param prenom
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "newEtu", targetNamespace = "gestions", className = "gestions.NewEtu")
    @ResponseWrapper(localName = "newEtuResponse", targetNamespace = "gestions", className = "gestions.NewEtuResponse")
    @Action(input = "gestions/ProjetGestionEtudiant/newEtuRequest", output = "gestions/ProjetGestionEtudiant/newEtuResponse")
    public boolean newEtu(
        @WebParam(name = "nom", targetNamespace = "")
        String nom,
        @WebParam(name = "prenom", targetNamespace = "")
        String prenom,
        @WebParam(name = "numEtu", targetNamespace = "")
        String numEtu);

}
